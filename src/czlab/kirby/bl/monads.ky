;; Copyright (c) 2013-2017, Kenneth Leung. All rights reserved.
;; The use and distribution terms for this software are covered by the
;; Eclipse Public License 1.0 (http:;;opensource.org;licenses;eclipse-1.0.php)
;; which can be found in the file epl-v10.html at the root of this distribution.
;; By using this software in any fashion, you are agreeing to be bound by
;; the terms of this license.
;; You must not remove this notice, or any other, from this software.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(ns ^{:doc ""
      :author "Kenneth Leung"}

  czlab.kirby.bl.monads

  (require ["./stdlib" :as std]))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(def identity
  {:bind (fn [mv mf] (mf mv))
   :result (fn [v] v)})

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(def maybe
  {:bind (fn [mv mf] (if (nil? mv) nil (mf mv)))
   :result (fn [v] v)
   :zero nil})

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(def array
  {:bind (fn [mv mf]
           (reduce
             (fn [acc v] (.concat acc v)) [] (map mf mv)))
   :result (fn [v] (.concat [] v))
   :zero []
   :plus #(reduce
            (fn [acc v] (.concat acc v))
            []
            (Array.prototype.slice.call arguments))})

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(def state
  {:bind (fn [mv mf]
           (fn [s]
             (var x (mv s)) ((mf (nth x 0)) (nth x 1))))
   :result (fn [v] (fn [s] (.concat [] [v s])))})

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(def continuation
  {:bind (fn [mv mf]
           (fn [c]
             (mv (fn [v] ((mf v) c)))))
   :result (fn [v] (fn [c] (c v)))})


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;EOF

