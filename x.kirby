
(loop [x 1 y 1 sum 0]
  (if (= sum 10)
    sum
    (do
      (console.log (str "sum=" sum))
      (recur (inc x) (inc y) (+ x y)))))


(values {:a 1 :b 2})

(keys {:c 3 :d 4})

(whatis? "aaa")

(typeof? 222)

(regexs "222" "g")
(regex "444")

(undef? undefined)

(boolean? true)

(number? 2)

(string? "222")

(fn? (fn [] ))

(date? nil)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
(regex? 2)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
(array? 2)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
(object? [2])

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
(null? nil)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
(isdef? 22)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
(assert (= 3 3) "poo")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
(true? 2)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
(false? 3)

(not 9)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
(when-not (= 4 5) "hello" "world")
(unless (= 4 5) "hello" "world")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
(if-not (= 4 5) "hello" "world")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
(when (= 4 5) "hello" "world")

(cond true 3 false 4 (= 3 4) 5)

(-> "hello" (.replace "poo") (.replace "world"))
(->> "hello" (replace "poo") (replace "world"))

(while (= 3 4) "hello" "world" (+ 3 4))

(let [ a 3 b (* 4 4) ] "hello" "world")

(loop [a 3 b (* 4 4)] (if a (* 5 6) (recur 4 6)))

(or 2 3)

(and 8 9)

(do-with [a (* 7 7)] "hello" "world")

(do->false "hello" "world" (* 9 9))
(do->true "hello" "world" (* 9 9))
(do->nil "hello" "world" (* 9 9))
(do->undef "hello" "world" (* 9 9))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
(dotimes [i 8] "hello" "world")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
(if-some [a (* 9 8)] (* 8 9) (- 7 6))
(if-some [a (* 9 8)] (* 8 9))

(when-some [a (* 9 8)] (* 8 9) (- 7 6))

(doto (str "2" "4") (.replace "5")(.replace "6"))


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;EOF


